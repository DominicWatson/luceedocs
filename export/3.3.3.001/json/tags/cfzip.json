{"status":"implemeted","nameSpaceSeperator":"","script":{"type":"multiple","rtexpr":true},"type":"java","nameSpace":"cf","hasNameAppendix":false,"description":"Manipulates ZIP and Java Archive (JAR) files.\n\t\tIn addition to the basic zip and unzip functions, use the cfzip tag to delete entries from an archive, filter files,\n\t\tread files in binary format, list the contents of an archive, and specify an entry path used in an executable JAR file.","parseBody":false,"name":"zip","bodyType":"free","attributeType":"fixed","attrMax":0,"attributes":{"charset":{"status":"implemeted","description":"The character set used to translate the ZIP or JAR\n            entry into a text string. Examples of character sets are:\n            JIS\n            RFC1345\n            UTF-16 (optional, default=encoding of the host machine)","required":false,"type":"string","scriptSupport":"none"},"entrypath":{"status":"implemeted","description":"Pathname on which the action is performed.","required":false,"type":"string","scriptSupport":"none"},"recurse":{"status":"implemeted","description":"Specifies whether the action\n            applies to subdirectories:\n            yes: includes subdirectories.\n            no: does not include subdirectories. (optional, default=yes)","required":false,"type":"boolean","scriptSupport":"none"},"destination":{"status":"implemeted","description":"Destination directory where the ZIP or JAR file is extracted.","required":false,"type":"string","scriptSupport":"none"},"source":{"status":"implemeted","description":"Source directory to be zipped. Not required\n            if cfzipparam is specified.","required":false,"type":"string","scriptSupport":"none"},"file":{"status":"implemeted","description":"Absolute pathname of the file on which the action is performed.\n            For example, the full pathname of the ZIP file: c:\\temp\\log.zip.","required":false,"type":"string","scriptSupport":"none"},"name":{"status":"implemeted","description":"Record set name in which the result of the list action is stored.\n            The record set columns are:\n            name: filename of the entry in the JAR file. For example, if the entry is\n            help\/docs\/index.htm, the name is index.htm.\n            directory: directory containing the entry. For the example above, the\n            directory is help\/docs. You can obtain the full entry name by concatenating\n            directory and name. If an entry is at the root level, the directory is empty ('').\n            size: uncompressed size of the entry, in bytes.\n            compressedSize: compressed size of the entry, in bytes.\n            type: type of entry (directory or file).\n            dateLastModified: last modified date of the entry, cfdate object.\n            comment: any comment, if present, for the entry.\n            crc: crc-32 checksum of the uncompressed entry data.","required":false,"type":"string","scriptSupport":"none"},"overwrite":{"status":"implemeted","description":"unzip: Specifies whether to overwrite the extracted files:\n            yes: if the extracted file already exists at the destination specified,\n            the file is overwritten.\n            no: if the extracted file already exists at the destination specified,\n            the file is not overwritten and that entry is not extracted. The remaining\n            entries are extracted.\n            zip: Specifies whether to overwrite the contents of a ZIP or JAR file:\n            yes: overwrites all of the content in the ZIP or JAR file if it exists.\n            no: updates existing entries and adds new entries to the ZIP or JAR file\n            if it exists. (optional, default=no)","required":false,"type":"boolean","scriptSupport":"none"},"prefix":{"status":"implemeted","description":"String added as a prefix to the ZIP or JAR entry.\n            The string is the name of a subdirectory in which the\n            entries are added.","required":false,"type":"string","scriptSupport":"none"},"action":{"status":"implemeted","description":"The action to take. Must be one of the following:\n            delete\n            list\n            read\n            readBinary\n            unzip\n            zip\n            If you do not specify an action, Railo\n            applies the default action, zip.","required":false,"type":"string","scriptSupport":"none"},"storepath":{"status":"implemeted","description":"zip: Specifies whether pathnames are stored in the ZIP or JAR file:\n            yes: pathnames of entries are stored in the ZIP or JAR file.\n            no: pathnames of the entries are not stored in the ZIP or JAR file.\n            All the files are placed at the root level. In case of a name conflict,\n            the last file in the iteration is added.\n            unzip: Specifies whether files are stored at the entrypath:\n            yes: the files are extracted to the entrypath.\n            no: the entrypath is ignored and all the files are extracted\n            at the root level. (optional, default= yes)","required":false,"type":"boolean","scriptSupport":"none"},"showdirectory":{"status":"implemeted","description":"yes: lists the directories.\n            no: does not list directories. (optional, default= no)","required":false,"type":"boolean","scriptSupport":"none"},"variable":{"status":"implemeted","description":"Variable in which the read content is stored.","required":false,"type":"string","scriptSupport":"none"},"filter":{"status":"implemeted","description":"File filter applied to the action. The action\n            applies to all files in the pathname specified that match the filter.","required":false,"type":"string","scriptSupport":"none"}},"attrMin":0}