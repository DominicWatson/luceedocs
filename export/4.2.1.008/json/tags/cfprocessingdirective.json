{"bodyType":"free","attrMax":0,"parseBody":false,"script":{"type":"multiple","rtexpr":true},"status":"implemeted","attrMin":0,"hasNameAppendix":false,"name":"processingdirective","type":"java","attributeCollection":true,"attributeType":"fixed","nameSpaceSeperator":"","attributes":{"executionlog":{"required":false,"status":"implemeted","scriptSupport":"none","type":"boolean","description":"Boolean indicating whether to write execution log or not."},"pageencoding":{"required":false,"status":"implemeted","scriptSupport":"none","type":"string","description":"A string literal; the character encoding to use to read the page. The value may be enclosed in single or double quotation marks, or none."},"suppresswhitespace":{"required":false,"status":"implemeted","scriptSupport":"none","type":"boolean","description":"Boolean indicating whether to suppress the white space and other output generated by the\n\t\tCFML tags within the cfprocessingdirective block."},"preservecase":{"required":false,"status":"implemeted","scriptSupport":"none","type":"boolean","description":"declare how variable keys defined by dot notation are handled.\nIf set to false converts all struct keys defined with \"dot notation\" to upper case.\nExample:\n- sct.dotNotation --> keyname: \"DOTNOTATION\"\n- sct[\"bracketNotation\"] --> keyname: \"bracketNotation\"\n\nIf set to true keep all struct keys defined with \"dot notation\" in original case (according to the \"bracket notation\").\nExample:\nsct.dotNotation --> keyname: \"dotNotation\"\nsct[\"bracketNotation\"] --> keyname: \"bracketNotation\""}},"description":"Suppresses extra white space and other output, produced by CFML within the tag's scope.","nameSpace":"cf"}